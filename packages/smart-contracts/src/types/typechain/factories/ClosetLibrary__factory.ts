/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ClosetLibrary, ClosetLibraryInterface } from '../ClosetLibrary';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str1',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'str2',
        type: 'string',
      },
    ],
    name: '_compareStrings',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'supply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'string',
                name: 'name',
                type: 'string',
              },
              {
                internalType: 'uint256',
                name: 'cost',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxTokens',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPerWallet',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'active',
                type: 'bool',
              },
              {
                internalType: 'address',
                name: 'revShareAddress',
                type: 'address',
              },
              {
                internalType: 'uint256[2]',
                name: 'revShareAmount',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Token',
            name: 'token',
            type: 'tuple',
          },
        ],
        internalType: 'struct ClosetToken[]',
        name: 'tokens',
        type: 'tuple[]',
      },
    ],
    name: 'trimClosetTokenArray',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'supply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'string',
                name: 'name',
                type: 'string',
              },
              {
                internalType: 'uint256',
                name: 'cost',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxTokens',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPerWallet',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'active',
                type: 'bool',
              },
              {
                internalType: 'address',
                name: 'revShareAddress',
                type: 'address',
              },
              {
                internalType: 'uint256[2]',
                name: 'revShareAmount',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Token',
            name: 'token',
            type: 'tuple',
          },
        ],
        internalType: 'struct ClosetToken[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x61077261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80637c68ec4c14610045578063eadafd651461007e575b600080fd5b6100696100533660046103fd565b8051602091820120825192909101919091201490565b60405190151581526020015b60405180910390f35b61009161008c36600461045d565b61009e565b6040516100759190610553565b60606000836001600160401b038111156100c857634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561010157816020015b6100ee61017d565b8152602001906001900390816100e65790505b50905060005b848110156101755783818151811061012f57634e487b7160e01b600052603260045260246000fd5b602002602001015182828151811061015757634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061016d906106ff565b915050610107565b509392505050565b60405180608001604052806000815260200160008152602001600081526020016101a56101aa565b905290565b6040518060e001604052806060815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b031681526020016101a560405180604001604052806002906020820280368337509192915050565b80356001600160a01b038116811461022257600080fd5b919050565b600082601f830112610237578081fd5b604051604081018181106001600160401b038211171561025957610259610726565b806040525080838560408601111561026f578384fd5b835b6002811015610290578135835260209283019290910190600101610271565b509195945050505050565b8035801515811461022257600080fd5b600082601f8301126102bb578081fd5b81356001600160401b038111156102d4576102d4610726565b6102e7601f8201601f19166020016106cf565b8181528460208386010111156102fb578283fd5b816020850160208301379081016020019190915292915050565b600060808284031215610326578081fd5b61032e610685565b905081358152602082013560208201526040820135604082015260608201356001600160401b038082111561036257600080fd5b90830190610100828603121561037757600080fd5b61037f6106ad565b82358281111561038e57600080fd5b61039a878286016102ab565b8252506020830135602082015260408301356040820152606083013560608201526103c76080840161029b565b60808201526103d860a0840161020b565b60a08201526103ea8660c08501610227565b60c0820152606084015250909392505050565b6000806040838503121561040f578182fd5b82356001600160401b0380821115610425578384fd5b610431868387016102ab565b93506020850135915080821115610446578283fd5b50610453858286016102ab565b9150509250929050565b6000806040838503121561046f578182fd5b823591506020808401356001600160401b038082111561048d578384fd5b818601915086601f8301126104a0578384fd5b8135818111156104b2576104b2610726565b8060051b6104c18582016106cf565b8281528581019085870183870188018c10156104db578889fd5b8893505b84841015610518578035868111156104f557898afd5b6105038d8a838b0101610315565b845250600193909301929187019187016104df565b50809750505050505050509250929050565b8060005b600281101561054d57815184526020938401939091019060010161052e565b50505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561067757603f1989840301855281516080815185528882015189860152878201518886015260608083015192508181870152825161010080848901528151806101808a01528d5b818110156105e1578381018e01518a82016101a001528d016105c4565b818111156105f3578e6101a0838c0101525b508c860151925060a083818b01528c870151935060c084818c01528588015160e08c015286880151965061062a848c018815159052565b908701516001600160a01b0381166101208c01529601519594506106526101408a018761052a565b998c0199601f01601f1916979097016101a00196505050928801925050600101610579565b509098975050505050505050565b604051608081016001600160401b03811182821017156106a7576106a7610726565b60405290565b60405160e081016001600160401b03811182821017156106a7576106a7610726565b604051601f8201601f191681016001600160401b03811182821017156106f7576106f7610726565b604052919050565b600060001982141561071f57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f017a5711de86984557e8b16cba63c9032df41a09624d1f8e8cb88a195d2646564736f6c63430008040033';

export class ClosetLibrary__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ClosetLibrary> {
    return super.deploy(overrides || {}) as Promise<ClosetLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClosetLibrary {
    return super.attach(address) as ClosetLibrary;
  }
  connect(signer: Signer): ClosetLibrary__factory {
    return super.connect(signer) as ClosetLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClosetLibraryInterface {
    return new utils.Interface(_abi) as ClosetLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ClosetLibrary {
    return new Contract(address, _abi, signerOrProvider) as ClosetLibrary;
  }
}
