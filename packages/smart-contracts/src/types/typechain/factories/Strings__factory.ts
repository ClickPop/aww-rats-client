/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Strings, StringsInterface } from '../Strings';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str1',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'str2',
        type: 'string',
      },
    ],
    name: 'compareStrings',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x6101a661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063bed34bba1461003a575b600080fd5b61005e6100483660046100f9565b8051602091820120825192909101919091201490565b604051901515815260200160405180910390f35b600082601f830112610082578081fd5b813567ffffffffffffffff8082111561009d5761009d61015a565b604051601f8301601f19908116603f011681019082821181831017156100c5576100c561015a565b816040528381528660208588010111156100dd578485fd5b8360208701602083013792830160200193909352509392505050565b6000806040838503121561010b578182fd5b823567ffffffffffffffff80821115610122578384fd5b61012e86838701610072565b93506020850135915080821115610143578283fd5b5061015085828601610072565b9150509250929050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ad611c827ebaef1611bcee0ead8842f6d9c27fdf147df55f0684f04b51efd29e64736f6c63430008040033';

export class Strings__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Strings> {
    return super.deploy(overrides || {}) as Promise<Strings>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Strings {
    return super.attach(address) as Strings;
  }
  connect(signer: Signer): Strings__factory {
    return super.connect(signer) as Strings__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringsInterface {
    return new utils.Interface(_abi) as StringsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Strings {
    return new Contract(address, _abi, signerOrProvider) as Strings;
  }
}
