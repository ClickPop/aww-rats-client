{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1F888f96D8F052DB440aE5759a1A589835D2e6e2",
      "txHash": "0x52a995f9381c6ffacde0d5804157f412c0fe5636b833898ed28f9b68814c124f",
      "kind": "uups"
    },
    {
      "address": "0xCeB80D405D230Db770fc7AeEC663690682E21Ca1",
      "txHash": "0xe497712e304138b55eb6bd20648c54ba458c22f43f080ac0f2cfcd2dd7e08f57",
      "kind": "uups"
    },
    {
      "address": "0x40474B875C3Debb9EeEd7b1891f51CD0403eCC95",
      "txHash": "0xa07e4c98b8f35d20df8be24d438932a6a4ffab3a98264dac88473b7ec2946e8e",
      "kind": "uups"
    }
  ],
  "impls": {
    "5eb5516d848dd57a4fd5be954d5512f0e87c9cc30f2e4a24b033a83fa61a8ac5": {
      "address": "0xbc03B27e4734cAE7661356528721A102c67Eb3A7",
      "txHash": "0x5f18b225d3453573dd1c72b3bdbf473fa51cf331d117f7a6520767cfefdcca5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:66"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Closet",
            "label": "existingTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "src/contracts/Closet.sol:39"
          },
          {
            "contract": "Closet",
            "label": "idToToken",
            "type": "t_mapping(t_uint256,t_struct(Token)2869_storage)",
            "src": "src/contracts/Closet.sol:40"
          },
          {
            "contract": "Closet",
            "label": "maxTokensPerWalletById",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "src/contracts/Closet.sol:41"
          },
          {
            "contract": "Closet",
            "label": "walletBans",
            "type": "t_mapping(t_address,t_struct(Ban)2888_storage)",
            "src": "src/contracts/Closet.sol:42"
          },
          {
            "contract": "Closet",
            "label": "erc20",
            "type": "t_contract(IERC20Upgradeable)2214",
            "src": "src/contracts/Closet.sol:44"
          },
          {
            "contract": "Closet",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "src/contracts/Closet.sol:316"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2869_storage)": {
            "label": "mapping(uint256 => struct Token)"
          },
          "t_struct(Token)2869_storage": {
            "label": "struct Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "cost",
                "type": "t_uint256"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256"
              },
              {
                "label": "maxPerWallet",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "revShareAddress",
                "type": "t_address"
              },
              {
                "label": "revShareAmount",
                "type": "t_array(t_uint256)2_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)2_storage": {
            "label": "uint256[2]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(Ban)2888_storage)": {
            "label": "mapping(address => struct Ban)"
          },
          "t_struct(Ban)2888_storage": {
            "label": "struct Ban",
            "members": [
              {
                "label": "banned",
                "type": "t_bool"
              },
              {
                "label": "reason",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2214": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "472793cf844454c5848fb873aa3275b97aaa2f1c2a8ffa270b19e9151d6530e6": {
      "address": "0xD4aE076B57b4EB57cd3Aaa59F0B3F1e6DcC361b6",
      "txHash": "0xba2cd73cc2140dfa7b55f31598484eec8473e2a61cd0162446ace5065b8c044b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:66"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Closet",
            "label": "existingTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "src/contracts/Closet.sol:39"
          },
          {
            "contract": "Closet",
            "label": "idToToken",
            "type": "t_mapping(t_uint256,t_struct(Token)2869_storage)",
            "src": "src/contracts/Closet.sol:40"
          },
          {
            "contract": "Closet",
            "label": "maxTokensPerWalletById",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "src/contracts/Closet.sol:41"
          },
          {
            "contract": "Closet",
            "label": "walletBans",
            "type": "t_mapping(t_address,t_struct(Ban)2888_storage)",
            "src": "src/contracts/Closet.sol:42"
          },
          {
            "contract": "Closet",
            "label": "erc20",
            "type": "t_contract(IERC20Upgradeable)2214",
            "src": "src/contracts/Closet.sol:44"
          },
          {
            "contract": "Closet",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "src/contracts/Closet.sol:325"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2869_storage)": {
            "label": "mapping(uint256 => struct Token)"
          },
          "t_struct(Token)2869_storage": {
            "label": "struct Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "cost",
                "type": "t_uint256"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256"
              },
              {
                "label": "maxPerWallet",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "revShareAddress",
                "type": "t_address"
              },
              {
                "label": "revShareAmount",
                "type": "t_array(t_uint256)2_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)2_storage": {
            "label": "uint256[2]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(Ban)2888_storage)": {
            "label": "mapping(address => struct Ban)"
          },
          "t_struct(Ban)2888_storage": {
            "label": "struct Ban",
            "members": [
              {
                "label": "banned",
                "type": "t_bool"
              },
              {
                "label": "reason",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2214": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "3e00a4252ee8bfc0869045233bb1a4c4c16d6987b3e0357bcf89516f961f5a18": {
      "address": "0xf1a99D6cbAE167D9C638ca50f3F515b98C966974",
      "txHash": "0x40a52ff31b5ef21d2d3672d0e79a61f4a503c233ec32fe85fe2d4cf260a6231e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:66"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Closet",
            "label": "existingTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "src/contracts/Closet.sol:39"
          },
          {
            "contract": "Closet",
            "label": "idToToken",
            "type": "t_mapping(t_uint256,t_struct(Token)2869_storage)",
            "src": "src/contracts/Closet.sol:40"
          },
          {
            "contract": "Closet",
            "label": "maxTokensPerWalletById",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "src/contracts/Closet.sol:41"
          },
          {
            "contract": "Closet",
            "label": "walletBans",
            "type": "t_mapping(t_address,t_struct(Ban)2888_storage)",
            "src": "src/contracts/Closet.sol:42"
          },
          {
            "contract": "Closet",
            "label": "erc20",
            "type": "t_contract(IERC20Upgradeable)2214",
            "src": "src/contracts/Closet.sol:44"
          },
          {
            "contract": "Closet",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "src/contracts/Closet.sol:329"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2869_storage)": {
            "label": "mapping(uint256 => struct Token)"
          },
          "t_struct(Token)2869_storage": {
            "label": "struct Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "cost",
                "type": "t_uint256"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256"
              },
              {
                "label": "maxPerWallet",
                "type": "t_uint256"
              },
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "revShareAddress",
                "type": "t_address"
              },
              {
                "label": "revShareAmount",
                "type": "t_array(t_uint256)2_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)2_storage": {
            "label": "uint256[2]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(Ban)2888_storage)": {
            "label": "mapping(address => struct Ban)"
          },
          "t_struct(Ban)2888_storage": {
            "label": "struct Ban",
            "members": [
              {
                "label": "banned",
                "type": "t_bool"
              },
              {
                "label": "reason",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2214": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "9737380f743d6a7face9e10db52b5bf16aa11878b9381a5fe34770e621ef4020": {
      "address": "0x526320380ca349623875Cc3b6785B505e9a783e7",
      "txHash": "0x9cd0d5fec8d96297abee2f03090926d469eb5436993e92fb07419f8b922cc8f7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:70"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "existingTokenIds",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:44"
          },
          {
            "label": "idToToken",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_uint256,t_struct(Token)2898_storage)",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:45"
          },
          {
            "label": "maxTokensPerWalletById",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:46"
          },
          {
            "label": "walletBans",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_struct(Ban)2917_storage)",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:47"
          },
          {
            "label": "erc20",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IERC20Upgradeable)2249",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:49"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "Closet",
            "src": "src/contracts/Closet.sol:488"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)2_storage": {
            "label": "uint256[2]",
            "numberOfBytes": "64"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)2249": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Ban)2917_storage)": {
            "label": "mapping(address => struct Ban)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Token)2898_storage)": {
            "label": "mapping(uint256 => struct Token)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Ban)2917_storage": {
            "label": "struct Ban",
            "members": [
              {
                "label": "banned",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Token)2898_storage": {
            "label": "struct Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "revShareAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "revShareAmount",
                "type": "t_array(t_uint256)2_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
