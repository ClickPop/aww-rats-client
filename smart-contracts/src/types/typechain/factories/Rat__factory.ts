/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rat, RatInterface } from "../Rat";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initContractURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_maxTokens",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "oldOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenOwners",
        type: "address[]",
      },
    ],
    name: "TokenTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "burnedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMaxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBurnedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBurnedTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newCost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "setERC20Address",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMax",
        type: "uint32",
      },
    ],
    name: "setMaxTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "max",
        type: "uint32",
      },
    ],
    name: "setMaxTokensPerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setMintingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bool",
        name: "banned",
        type: "bool",
      },
    ],
    name: "setWalletBan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "storeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "walletBans",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060088190556658d15e17628000600955600a80546001600160481b03191668010000000f00000000179055600c553480156200004157600080fd5b506040516200363138038062003631833981016040819052620000649162000305565b8151829082906200007d9060009060208501906200017a565b508051620000939060019060208401906200017a565b505050620000b0620000aa6200012460201b60201c565b62000128565b600c8490558651620000ca9060149060208a01906200017a565b50600a805463ffffffff191663ffffffff85161790558551620000f590600b9060208901906200017a565b5050601380546001600160a01b0319166001600160a01b039590951694909417909355506200043b9350505050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200018890620003e8565b90600052602060002090601f016020900481019282620001ac5760008555620001f7565b82601f10620001c757805160ff1916838001178555620001f7565b82800160010185558215620001f7579182015b82811115620001f7578251825591602001919060010190620001da565b506200020592915062000209565b5090565b5b808211156200020557600081556001016200020a565b80516001600160a01b03811681146200023857600080fd5b919050565b600082601f8301126200024e578081fd5b81516001600160401b03808211156200026b576200026b62000425565b604051601f8301601f19908116603f0116810190828211818310171562000296576200029662000425565b81604052838152602092508683858801011115620002b2578485fd5b8491505b83821015620002d55785820183015181830184015290820190620002b6565b83821115620002e657848385830101525b9695505050505050565b805163ffffffff811681146200023857600080fd5b600080600080600080600060e0888a03121562000320578283fd5b87516001600160401b038082111562000337578485fd5b620003458b838c016200023d565b985060208a01519150808211156200035b578485fd5b620003698b838c016200023d565b97506200037960408b0162000220565b965060608a015195506200039060808b01620002f0565b945060a08a0151915080821115620003a6578384fd5b620003b48b838c016200023d565b935060c08a0151915080821115620003ca578283fd5b50620003d98a828b016200023d565b91505092959891949750929550565b600181811c90821680620003fd57607f821691505b602082108114156200041f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6131e6806200044b6000396000f3fe6080604052600436106102515760003560e01c80638da5cb5b11610139578063c87b56dd116100b6578063e8a3d4851161007a578063e8a3d485146106f5578063e985e9c51461070a578063ed3f5d4a1461072a578063eed670d71461074a578063f2fde38b1461077a578063f8a14f461461079a57600080fd5b8063c87b56dd14610643578063cafee7ee14610663578063cd634be014610683578063d1b02ba7146106b6578063e8315742146106d857600080fd5b8063a22cb465116100fd578063a22cb46514610593578063b88d4fde146105b3578063beb9716d146105d3578063c3f4f54f146105f4578063c3fcbbe31461060957600080fd5b80638da5cb5b146105225780638e499bcf14610540578063938e3d7b1461055657806395d89b41146105765780639cbf9e361461058b57600080fd5b806342842e0e116101d25780636c0360eb116101965780636c0360eb1461047857806370a082311461048d578063715018a6146104ad5780637420aa36146104c2578063785e9e86146104e25780637b47ec1a1461050257600080fd5b806342842e0e146103d857806344a0d68a146103f857806354a26847146104185780636352211e146104385780636a92072b1461045857600080fd5b80631c348dd3116102195780631c348dd31461032b57806322ad22a71461034b57806323b872dd1461036b57806340398d671461038b57806341bec0d2146103b857600080fd5b806301ffc9a71461025657806306fdde031461028b578063081812fc146102ad578063095ea7b3146102e557806313faede614610307575b600080fd5b34801561026257600080fd5b50610276610271366004612c5f565b6107ba565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102a061080c565b6040516102829190612ecf565b3480156102b957600080fd5b506102cd6102c8366004612cca565b61089e565b6040516001600160a01b039091168152602001610282565b3480156102f157600080fd5b50610305610300366004612bd5565b61092b565b005b34801561031357600080fd5b5061031d60095481565b604051908152602001610282565b34801561033757600080fd5b5061031d610346366004612cca565b610a41565b34801561035757600080fd5b50610305610366366004612cfa565b610a62565b34801561037757600080fd5b50610305610386366004612aeb565b610a9a565b34801561039757600080fd5b506103ab6103a6366004612a9f565b610acb565b6040516102829190612e97565b3480156103c457600080fd5b506103056103d3366004612a9f565b610b37565b3480156103e457600080fd5b506103056103f3366004612aeb565b610b83565b34801561040457600080fd5b50610305610413366004612cca565b610b9e565b34801561042457600080fd5b50610305610433366004612bfe565b610bcd565b34801561044457600080fd5b506102cd610453366004612cca565b610c2a565b34801561046457600080fd5b50610305610473366004612d3f565b610ca1565b34801561048457600080fd5b506102a0610cfc565b34801561049957600080fd5b5061031d6104a8366004612a9f565b610d8a565b3480156104b957600080fd5b50610305610e11565b3480156104ce57600080fd5b506103056104dd366004612c27565b610e47565b3480156104ee57600080fd5b506013546102cd906001600160a01b031681565b34801561050e57600080fd5b5061030561051d366004612cca565b610e8f565b34801561052e57600080fd5b506007546001600160a01b03166102cd565b34801561054c57600080fd5b5061031d60085481565b34801561056257600080fd5b50610305610571366004612c97565b611013565b34801561058257600080fd5b506102a0611050565b61030561105f565b34801561059f57600080fd5b506103056105ae366004612b9f565b6113d3565b3480156105bf57600080fd5b506103056105ce366004612b26565b611498565b3480156105df57600080fd5b50600a5461027690600160401b900460ff1681565b34801561060057600080fd5b506103ab6114d0565b34801561061557600080fd5b50600a5461062e90640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610282565b34801561064f57600080fd5b506102a061065e366004612cca565b611527565b34801561066f57600080fd5b506103ab61067e366004612a9f565b611691565b34801561068f57600080fd5b5061062e61069e366004612a9f565b60116020526000908152604090205463ffffffff1681565b3480156106c257600080fd5b506106cb6116fb565b6040516102829190612e4a565b3480156106e457600080fd5b50600a5461062e9063ffffffff1681565b34801561070157600080fd5b506102a061175c565b34801561071657600080fd5b50610276610725366004612ab9565b61176b565b34801561073657600080fd5b50610305610745366004612b9f565b611799565b34801561075657600080fd5b50610276610765366004612a9f565b60126020526000908152604090205460ff1681565b34801561078657600080fd5b50610305610795366004612a9f565b6117ee565b3480156107a657600080fd5b506102cd6107b5366004612cca565b611889565b60006001600160e01b031982166380ac58cd60e01b14806107eb57506001600160e01b03198216635b5e139f60e01b145b8061080657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461081b906130e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610847906130e0565b80156108945780601f1061086957610100808354040283529160200191610894565b820191906000526020600020905b81548152906001019060200180831161087757829003601f168201915b5050505050905090565b60006108a9826118b3565b61090f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061093682610c2a565b9050806001600160a01b0316836001600160a01b031614156109a45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610906565b336001600160a01b03821614806109c057506109c0813361176b565b610a325760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610906565b610a3c83836118d0565b505050565b600e8181548110610a5157600080fd5b600091825260209091200154905081565b6007546001600160a01b03163314610a8c5760405162461bcd60e51b815260040161090690612f34565b610a96828261193e565b5050565b610aa433826119c9565b610ac05760405162461bcd60e51b815260040161090690612f69565b610a3c838383611a8b565b6001600160a01b0381166000908152600f6020908152604091829020805483518184028101840190945280845260609392830182828015610b2b57602002820191906000526020600020905b815481526020019060010190808311610b17575b50505050509050919050565b6007546001600160a01b03163314610b615760405162461bcd60e51b815260040161090690612f34565b601380546001600160a01b0319166001600160a01b0392909216919091179055565b610a3c83838360405180602001604052806000815250611498565b6007546001600160a01b03163314610bc85760405162461bcd60e51b815260040161090690612f34565b600955565b6007546001600160a01b03163314610bf75760405162461bcd60e51b815260040161090690612f34565b6001600160a01b03919091166000908152601160205260409020805463ffffffff191663ffffffff909216919091179055565b6000818152600260205260408120546001600160a01b0316806108065760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610906565b6007546001600160a01b03163314610ccb5760405162461bcd60e51b815260040161090690612f34565b600a805460085468ff00000000ffffffff1990911663ffffffff939093169283179211600160401b02919091179055565b600b8054610d09906130e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d35906130e0565b8015610d825780601f10610d5757610100808354040283529160200191610d82565b820191906000526020600020905b815481529060010190602001808311610d6557829003601f168201915b505050505081565b60006001600160a01b038216610df55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610906565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610e3b5760405162461bcd60e51b815260040161090690612f34565b610e456000611c36565b565b6007546001600160a01b03163314610e715760405162461bcd60e51b815260040161090690612f34565b600a8054911515600160401b0260ff60401b19909216919091179055565b33610e9982610c2a565b6001600160a01b03161480610ebb5750610ebb610eb582610c2a565b3361176b565b610f075760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e2074686973207261740000000000000000006044820152606401610906565b600033610f1383610c2a565b6001600160a01b031614610f2f57610f2a82610c2a565b610f31565b335b9050610f3c82611c88565b610f4581610d8a565b610f5257610f5281611cc8565b610f5c8183611e38565b6001600160a01b03811660009081526010602090815260408220805460018181018355918452918320909101849055600e8054918201815582527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018390556008805491610fc9836130c9565b9091555050604080518381526001600160a01b03831660208201527f33631bcd0a4d34a7e2c240ab0753d5adfb7284d8ac89dab6876ec785c0cfa0e6910160405180910390a15050565b6007546001600160a01b0316331461103d5760405162461bcd60e51b815260040161090690612f34565b8051610a9690601490602084019061290b565b60606001805461081b906130e0565b600a5460085463ffffffff9091161180156110835750600a54600160401b900460ff165b6110cf5760405162461bcd60e51b815260206004820152601c60248201527f4d6178206e756d626572206f6620746f6b656e732072656163686564000000006044820152606401610906565b3360009081526012602052604090205460ff161561112f5760405162461bcd60e51b815260206004820152601f60248201527f546869732077616c6c65742063616e6e6f74206d696e74206120746f6b656e006044820152606401610906565b600c546013546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae9190612ce2565b90506009548110156111f65760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606401610906565b600061120133610d8a565b159050801561123d57600a54336000908152601160205260409020805464010000000090920463ffffffff1663ffffffff199092169190911790555b3360008181526011602052604090205463ffffffff169061125d90610d8a565b11156112ab5760405162461bcd60e51b815260206004820152601d60248201527f4d617820746f6b656e73207265616368656420666f722077616c6c65740000006044820152606401610906565b6112d8336112c16007546001600160a01b031690565b6009546013546001600160a01b0316929190611fee565b6112e23384612048565b801561132b57600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b031916331790555b600c805490600061133b8361311b565b9091555050600880549060006113508361311b565b9091555050336000908152600f60209081526040808320805460018101825590845292829020909201859055600a805460085460ff60401b19821663ffffffff90921611600160401b0217905590518481527ff00d28232b285f24f2e38415deb2ceb31069e70d4505838b3911b4f02058502e91015b60405180910390a1505050565b6001600160a01b03821633141561142c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610906565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114a233836119c9565b6114be5760405162461bcd60e51b815260040161090690612f69565b6114ca84848484612062565b50505050565b6060600e80548060200260200160405190810160405280929190818152602001828054801561089457602002820191906000526020600020905b81548152602001906001019080831161150a575050505050905090565b6060611532826118b3565b6115985760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610906565b600082815260066020526040812080546115b1906130e0565b80601f01602080910402602001604051908101604052809291908181526020018280546115dd906130e0565b801561162a5780601f106115ff5761010080835404028352916020019161162a565b820191906000526020600020905b81548152906001019060200180831161160d57829003601f168201915b50505050509050600061163b612095565b905080516000141561164e575092915050565b815115611680578082604051602001611668929190612dde565b60405160208183030381529060405292505050919050565b611689846120a4565b949350505050565b6001600160a01b038116600090815260106020908152604091829020805483518184028101840190945280845260609392830182828015610b2b5760200282019190600052602060002090815481526020019060010190808311610b175750505050509050919050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561089457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611735575050505050905090565b60606014805461081b906130e0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546001600160a01b031633146117c35760405162461bcd60e51b815260040161090690612f34565b6001600160a01b03919091166000908152601260205260409020805460ff1916911515919091179055565b6007546001600160a01b031633146118185760405162461bcd60e51b815260040161090690612f34565b6001600160a01b03811661187d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610906565b61188681611c36565b50565b600d818154811061189957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061190582610c2a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611947826118b3565b6119aa5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610906565b60008281526006602090815260409091208251610a3c9284019061290b565b60006119d4826118b3565b611a355760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610906565b6000611a4083610c2a565b9050806001600160a01b0316846001600160a01b03161480611a7b5750836001600160a01b0316611a708461089e565b6001600160a01b0316145b806116895750611689818561176b565b826001600160a01b0316611a9e82610c2a565b6001600160a01b031614611b065760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610906565b6001600160a01b038216611b685760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610906565b611b7383838361216f565b611b7e6000826118d0565b6001600160a01b0383166000908152600360205260408120805460019290611ba7908490613086565b90915550506001600160a01b0382166000908152600360205260408120805460019290611bd590849061305a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611c9181612289565b60008181526006602052604090208054611caa906130e0565b1590506118865760008181526006602052604081206118869161298f565b600d5460005b81811015610a3c57826001600160a01b0316600d8281548110611d0157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415611e2657611d27600183613086565b811415611d7457600d805480611d4d57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b600d611d81600184613086565b81548110611d9f57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600d80546001600160a01b039092169183908110611dd957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d805480611d4d57634e487b7160e01b600052603160045260246000fd5b80611e308161311b565b915050611cce565b6001600160a01b0382166000908152600f6020526040812054905b818110156114ca576001600160a01b0384166000908152600f60205260409020805484919083908110611e9657634e487b7160e01b600052603260045260246000fd5b90600052602060002001541415611fdc57611eb2600183613086565b811415611f09576001600160a01b0384166000908152600f60205260409020805480611eee57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590556114ca565b6001600160a01b0384166000908152600f60205260409020611f2c600184613086565b81548110611f4a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600f6000866001600160a01b03166001600160a01b031681526020019081526020016000208281548110611f9957634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092556001600160a01b0386168152600f90915260409020805480611eee57634e487b7160e01b600052603160045260246000fd5b80611fe68161311b565b915050611e53565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526114ca908590612330565b610a96828260405180602001604052806000815250612402565b61206d848484611a8b565b61207984848484612435565b6114ca5760405162461bcd60e51b815260040161090690612ee2565b6060600b805461081b906130e0565b60606120af826118b3565b6121135760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610906565b600061211d612095565b9050600081511161213d5760405180602001604052806000815250612168565b8061214784612542565b604051602001612158929190612dde565b6040516020818303038152906040525b9392505050565b6001600160a01b0383161580159061218f57506001600160a01b03821615155b15610a3c57600161219f84610d8a565b6121a99190613086565b6121b6576121b683611cc8565b6121bf82610d8a565b61220f57600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0384161790555b6122198382611e38565b6001600160a01b038083166000908152600f60209081526040808320805460018101825581855292842090920185905592861682529082902091517fc5924cfdebd60744aa1d44883cfef5b2bab40fa00f59f61cb3464b281f90bd27926113c69285928792899291600d90612fba565b600061229482610c2a565b90506122a28160008461216f565b6122ad6000836118d0565b6001600160a01b03811660009081526003602052604081208054600192906122d6908490613086565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612385826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661265c9092919063ffffffff16565b805190915015610a3c57808060200190518101906123a39190612c43565b610a3c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610906565b61240c838361266b565b6124196000848484612435565b610a3c5760405162461bcd60e51b815260040161090690612ee2565b60006001600160a01b0384163b1561253757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612479903390899088908890600401612e0d565b602060405180830381600087803b15801561249357600080fd5b505af19250505080156124c3575060408051601f3d908101601f191682019092526124c091810190612c7b565b60015b61251d573d8080156124f1576040519150601f19603f3d011682016040523d82523d6000602084013e6124f6565b606091505b5080516125155760405162461bcd60e51b815260040161090690612ee2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611689565b506001949350505050565b6060816125665750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612590578061257a8161311b565b91506125899050600a83613072565b915061256a565b60008167ffffffffffffffff8111156125b957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156125e3576020820181803683370190505b5090505b8415611689576125f8600183613086565b9150612605600a86613136565b61261090603061305a565b60f81b81838151811061263357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350612655600a86613072565b94506125e7565b606061168984846000856127aa565b6001600160a01b0382166126c15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610906565b6126ca816118b3565b156127175760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610906565b6127236000838361216f565b6001600160a01b038216600090815260036020526040812080546001929061274c90849061305a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608247101561280b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610906565b843b6128595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610906565b600080866001600160a01b031685876040516128759190612dc2565b60006040518083038185875af1925050503d80600081146128b2576040519150601f19603f3d011682016040523d82523d6000602084013e6128b7565b606091505b50915091506128c78282866128d2565b979650505050505050565b606083156128e1575081612168565b8251156128f15782518084602001fd5b8160405162461bcd60e51b81526004016109069190612ecf565b828054612917906130e0565b90600052602060002090601f016020900481019282612939576000855561297f565b82601f1061295257805160ff191683800117855561297f565b8280016001018555821561297f579182015b8281111561297f578251825591602001919060010190612964565b5061298b9291506129c5565b5090565b50805461299b906130e0565b6000825580601f106129ab575050565b601f01602090049060005260206000209081019061188691905b5b8082111561298b57600081556001016129c6565b600067ffffffffffffffff808411156129f5576129f5613176565b604051601f8501601f19908116603f01168101908282118183101715612a1d57612a1d613176565b81604052809350858152868686011115612a3657600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114612a6757600080fd5b919050565b600082601f830112612a7c578081fd5b612168838335602085016129da565b803563ffffffff81168114612a6757600080fd5b600060208284031215612ab0578081fd5b61216882612a50565b60008060408385031215612acb578081fd5b612ad483612a50565b9150612ae260208401612a50565b90509250929050565b600080600060608486031215612aff578081fd5b612b0884612a50565b9250612b1660208501612a50565b9150604084013590509250925092565b60008060008060808587031215612b3b578081fd5b612b4485612a50565b9350612b5260208601612a50565b925060408501359150606085013567ffffffffffffffff811115612b74578182fd5b8501601f81018713612b84578182fd5b612b93878235602084016129da565b91505092959194509250565b60008060408385031215612bb1578182fd5b612bba83612a50565b91506020830135612bca8161318c565b809150509250929050565b60008060408385031215612be7578182fd5b612bf083612a50565b946020939093013593505050565b60008060408385031215612c10578182fd5b612c1983612a50565b9150612ae260208401612a8b565b600060208284031215612c38578081fd5b81356121688161318c565b600060208284031215612c54578081fd5b81516121688161318c565b600060208284031215612c70578081fd5b81356121688161319a565b600060208284031215612c8c578081fd5b81516121688161319a565b600060208284031215612ca8578081fd5b813567ffffffffffffffff811115612cbe578182fd5b61168984828501612a6c565b600060208284031215612cdb578081fd5b5035919050565b600060208284031215612cf3578081fd5b5051919050565b60008060408385031215612d0c578182fd5b82359150602083013567ffffffffffffffff811115612d29578182fd5b612d3585828601612a6c565b9150509250929050565b600060208284031215612d50578081fd5b61216882612a8b565b6000815480845260208085019450838352808320835b83811015612d8b57815487529582019560019182019101612d6f565b509495945050505050565b60008151808452612dae81602086016020860161309d565b601f01601f19169290920160200192915050565b60008251612dd481846020870161309d565b9190910192915050565b60008351612df081846020880161309d565b835190830190612e0481836020880161309d565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e4090830184612d96565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612e8b5783516001600160a01b031683529284019291840191600101612e66565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612e8b57835183529284019291840191600101612eb3565b6020815260006121686020830184612d96565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b868152600060018060a01b038088166020840152808716604084015260c06060840152612fea60c0840187612d59565b8381036080850152612ffc8187612d59565b84810360a086015285548082528685526020808620935090910190845b818110156130495761303a83868654166001600160a01b0316815260200190565b60019485019490935001613019565b50909b9a5050505050505050505050565b6000821982111561306d5761306d61314a565b500190565b60008261308157613081613160565b500490565b6000828210156130985761309861314a565b500390565b60005b838110156130b85781810151838201526020016130a0565b838111156114ca5750506000910152565b6000816130d8576130d861314a565b506000190190565b600181811c908216806130f457607f821691505b6020821081141561311557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561312f5761312f61314a565b5060010190565b60008261314557613145613160565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461188657600080fd5b6001600160e01b03198116811461188657600080fdfea264697066735822122025077de5859906c8a6d054e45e36e849ef2642d2dc161a046caf26754bbb96ab64736f6c63430008040033";

export class Rat__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initContractURI: string,
    baseURI_: string,
    _erc20: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Rat> {
    return super.deploy(
      initContractURI,
      baseURI_,
      _erc20,
      baseId,
      _maxTokens,
      name,
      symbol,
      overrides || {}
    ) as Promise<Rat>;
  }
  getDeployTransaction(
    initContractURI: string,
    baseURI_: string,
    _erc20: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initContractURI,
      baseURI_,
      _erc20,
      baseId,
      _maxTokens,
      name,
      symbol,
      overrides || {}
    );
  }
  attach(address: string): Rat {
    return super.attach(address) as Rat;
  }
  connect(signer: Signer): Rat__factory {
    return super.connect(signer) as Rat__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatInterface {
    return new utils.Interface(_abi) as RatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rat {
    return new Contract(address, _abi, signerOrProvider) as Rat;
  }
}
