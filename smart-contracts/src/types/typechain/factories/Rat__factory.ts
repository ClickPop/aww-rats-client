/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rat, RatInterface } from "../Rat";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initContractURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_maxTokens",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "oldOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenOwners",
        type: "address[]",
      },
    ],
    name: "TokenTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "burnedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMaxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBurnedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBurnedTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newCost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "setERC20Address",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMax",
        type: "uint32",
      },
    ],
    name: "setMaxTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "max",
        type: "uint32",
      },
    ],
    name: "setMaxTokensPerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setMintingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bool",
        name: "banned",
        type: "bool",
      },
    ],
    name: "setWalletBan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "storeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "walletBans",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060088190556658d15e17628000600955600a80546001600160481b03191668010000000f00000000179055600b553480156200004157600080fd5b506040516200354a3803806200354a8339810160408190526200006491620002d9565b8151829082906200007d90600090602085019062000166565b5080516200009390600190602084019062000166565b505050620000b0620000aa6200011060201b60201c565b62000114565b600b8490558551620000ca90601390602089019062000166565b5050600a805463ffffffff191663ffffffff93909316929092179091555050601280546001600160a01b0319166001600160a01b039290921691909117905550620003f7565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200017490620003a4565b90600052602060002090601f016020900481019282620001985760008555620001e3565b82601f10620001b357805160ff1916838001178555620001e3565b82800160010185558215620001e3579182015b82811115620001e3578251825591602001919060010190620001c6565b50620001f1929150620001f5565b5090565b5b80821115620001f15760008155600101620001f6565b600082601f8301126200021d578081fd5b81516001600160401b03808211156200023a576200023a620003e1565b604051601f8301601f19908116603f01168101908282118183101715620002655762000265620003e1565b8160405283815260209250868385880101111562000281578485fd5b8491505b83821015620002a4578582018301518183018401529082019062000285565b83821115620002b557848385830101525b9695505050505050565b805163ffffffff81168114620002d457600080fd5b919050565b60008060008060008060c08789031215620002f2578182fd5b86516001600160401b038082111562000309578384fd5b620003178a838b016200020c565b60208a015190985091506001600160a01b038216821462000336578384fd5b819650604089015195506200034e60608a01620002bf565b9450608089015191508082111562000364578384fd5b620003728a838b016200020c565b935060a089015191508082111562000388578283fd5b506200039789828a016200020c565b9150509295509295509295565b600181811c90821680620003b957607f821691505b60208210811415620003db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61314380620004076000396000f3fe6080604052600436106102465760003560e01c80638da5cb5b11610139578063c87b56dd116100b6578063e8a3d4851161007a578063e8a3d485146106d5578063e985e9c5146106ea578063ed3f5d4a1461070a578063eed670d71461072a578063f2fde38b1461075a578063f8a14f461461077a57600080fd5b8063c87b56dd14610623578063cafee7ee14610643578063cd634be014610663578063d1b02ba714610696578063e8315742146106b857600080fd5b8063a22cb465116100fd578063a22cb46514610573578063b88d4fde14610593578063beb9716d146105b3578063c3f4f54f146105d4578063c3fcbbe3146105e957600080fd5b80638da5cb5b146105025780638e499bcf14610520578063938e3d7b1461053657806395d89b41146105565780639cbf9e361461056b57600080fd5b806342842e0e116101c757806370a082311161018b57806370a082311461046d578063715018a61461048d5780637420aa36146104a2578063785e9e86146104c25780637b47ec1a146104e257600080fd5b806342842e0e146103cd57806344a0d68a146103ed57806354a268471461040d5780636352211e1461042d5780636a92072b1461044d57600080fd5b80631c348dd31161020e5780631c348dd31461032057806322ad22a71461034057806323b872dd1461036057806340398d671461038057806341bec0d2146103ad57600080fd5b806301ffc9a71461024b57806306fdde0314610280578063081812fc146102a2578063095ea7b3146102da57806313faede6146102fc575b600080fd5b34801561025757600080fd5b5061026b610266366004612bbc565b61079a565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102956107ec565b6040516102779190612e2c565b3480156102ae57600080fd5b506102c26102bd366004612c27565b61087e565b6040516001600160a01b039091168152602001610277565b3480156102e657600080fd5b506102fa6102f5366004612b32565b61090b565b005b34801561030857600080fd5b5061031260095481565b604051908152602001610277565b34801561032c57600080fd5b5061031261033b366004612c27565b610a21565b34801561034c57600080fd5b506102fa61035b366004612c57565b610a42565b34801561036c57600080fd5b506102fa61037b366004612a48565b610a7a565b34801561038c57600080fd5b506103a061039b3660046129fc565b610aab565b6040516102779190612df4565b3480156103b957600080fd5b506102fa6103c83660046129fc565b610b17565b3480156103d957600080fd5b506102fa6103e8366004612a48565b610b63565b3480156103f957600080fd5b506102fa610408366004612c27565b610b7e565b34801561041957600080fd5b506102fa610428366004612b5b565b610bad565b34801561043957600080fd5b506102c2610448366004612c27565b610c0a565b34801561045957600080fd5b506102fa610468366004612c9c565b610c81565b34801561047957600080fd5b506103126104883660046129fc565b610cdc565b34801561049957600080fd5b506102fa610d63565b3480156104ae57600080fd5b506102fa6104bd366004612b84565b610d99565b3480156104ce57600080fd5b506012546102c2906001600160a01b031681565b3480156104ee57600080fd5b506102fa6104fd366004612c27565b610de1565b34801561050e57600080fd5b506007546001600160a01b03166102c2565b34801561052c57600080fd5b5061031260085481565b34801561054257600080fd5b506102fa610551366004612bf4565b610f65565b34801561056257600080fd5b50610295610fa2565b6102fa610fb1565b34801561057f57600080fd5b506102fa61058e366004612afc565b611325565b34801561059f57600080fd5b506102fa6105ae366004612a83565b6113ea565b3480156105bf57600080fd5b50600a5461026b90600160401b900460ff1681565b3480156105e057600080fd5b506103a0611422565b3480156105f557600080fd5b50600a5461060e90640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610277565b34801561062f57600080fd5b5061029561063e366004612c27565b611479565b34801561064f57600080fd5b506103a061065e3660046129fc565b6115f0565b34801561066f57600080fd5b5061060e61067e3660046129fc565b60106020526000908152604090205463ffffffff1681565b3480156106a257600080fd5b506106ab61165a565b6040516102779190612da7565b3480156106c457600080fd5b50600a5461060e9063ffffffff1681565b3480156106e157600080fd5b506102956116bb565b3480156106f657600080fd5b5061026b610705366004612a16565b6116ca565b34801561071657600080fd5b506102fa610725366004612afc565b6116f8565b34801561073657600080fd5b5061026b6107453660046129fc565b60116020526000908152604090205460ff1681565b34801561076657600080fd5b506102fa6107753660046129fc565b61174d565b34801561078657600080fd5b506102c2610795366004612c27565b6117e8565b60006001600160e01b031982166380ac58cd60e01b14806107cb57506001600160e01b03198216635b5e139f60e01b145b806107e657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546107fb9061303d565b80601f01602080910402602001604051908101604052809291908181526020018280546108279061303d565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050905090565b600061088982611812565b6108ef5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061091682610c0a565b9050806001600160a01b0316836001600160a01b031614156109845760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108e6565b336001600160a01b03821614806109a057506109a081336116ca565b610a125760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108e6565b610a1c838361182f565b505050565b600d8181548110610a3157600080fd5b600091825260209091200154905081565b6007546001600160a01b03163314610a6c5760405162461bcd60e51b81526004016108e690612e91565b610a76828261189d565b5050565b610a843382611928565b610aa05760405162461bcd60e51b81526004016108e690612ec6565b610a1c8383836119ea565b6001600160a01b0381166000908152600e6020908152604091829020805483518184028101840190945280845260609392830182828015610b0b57602002820191906000526020600020905b815481526020019060010190808311610af7575b50505050509050919050565b6007546001600160a01b03163314610b415760405162461bcd60e51b81526004016108e690612e91565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b610a1c838383604051806020016040528060008152506113ea565b6007546001600160a01b03163314610ba85760405162461bcd60e51b81526004016108e690612e91565b600955565b6007546001600160a01b03163314610bd75760405162461bcd60e51b81526004016108e690612e91565b6001600160a01b03919091166000908152601060205260409020805463ffffffff191663ffffffff909216919091179055565b6000818152600260205260408120546001600160a01b0316806107e65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108e6565b6007546001600160a01b03163314610cab5760405162461bcd60e51b81526004016108e690612e91565b600a805460085468ff00000000ffffffff1990911663ffffffff939093169283179211600160401b02919091179055565b60006001600160a01b038216610d475760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108e6565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610d8d5760405162461bcd60e51b81526004016108e690612e91565b610d976000611b95565b565b6007546001600160a01b03163314610dc35760405162461bcd60e51b81526004016108e690612e91565b600a8054911515600160401b0260ff60401b19909216919091179055565b33610deb82610c0a565b6001600160a01b03161480610e0d5750610e0d610e0782610c0a565b336116ca565b610e595760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e20746869732072617400000000000000000060448201526064016108e6565b600033610e6583610c0a565b6001600160a01b031614610e8157610e7c82610c0a565b610e83565b335b9050610e8e82611be7565b610e9781610cdc565b610ea457610ea481611c27565b610eae8183611d97565b6001600160a01b0381166000908152600f602090815260408220805460018181018355918452918320909101849055600d8054918201815582527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018390556008805491610f1b83613026565b9091555050604080518381526001600160a01b03831660208201527f33631bcd0a4d34a7e2c240ab0753d5adfb7284d8ac89dab6876ec785c0cfa0e6910160405180910390a15050565b6007546001600160a01b03163314610f8f5760405162461bcd60e51b81526004016108e690612e91565b8051610a76906013906020840190612868565b6060600180546107fb9061303d565b600a5460085463ffffffff909116118015610fd55750600a54600160401b900460ff165b6110215760405162461bcd60e51b815260206004820152601c60248201527f4d6178206e756d626572206f6620746f6b656e7320726561636865640000000060448201526064016108e6565b3360009081526011602052604090205460ff16156110815760405162461bcd60e51b815260206004820152601f60248201527f546869732077616c6c65742063616e6e6f74206d696e74206120746f6b656e0060448201526064016108e6565b600b546012546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156110c857600080fd5b505afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111009190612c3f565b90506009548110156111485760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b60448201526064016108e6565b600061115333610cdc565b159050801561118f57600a54336000908152601060205260409020805464010000000090920463ffffffff1663ffffffff199092169190911790555b3360008181526010602052604090205463ffffffff16906111af90610cdc565b11156111fd5760405162461bcd60e51b815260206004820152601d60248201527f4d617820746f6b656e73207265616368656420666f722077616c6c657400000060448201526064016108e6565b61122a336112136007546001600160a01b031690565b6009546012546001600160a01b0316929190611f4d565b6112343384611fa7565b801561127d57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b031916331790555b600b805490600061128d83613078565b9091555050600880549060006112a283613078565b9091555050336000908152600e60209081526040808320805460018101825590845292829020909201859055600a805460085460ff60401b19821663ffffffff90921611600160401b0217905590518481527ff00d28232b285f24f2e38415deb2ceb31069e70d4505838b3911b4f02058502e91015b60405180910390a1505050565b6001600160a01b03821633141561137e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108e6565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6113f43383611928565b6114105760405162461bcd60e51b81526004016108e690612ec6565b61141c84848484611fc1565b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561087457602002820191906000526020600020905b81548152602001906001019080831161145c575050505050905090565b606061148482611812565b6114ea5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016108e6565b600082815260066020526040812080546115039061303d565b80601f016020809104026020016040519081016040528092919081815260200182805461152f9061303d565b801561157c5780601f106115515761010080835404028352916020019161157c565b820191906000526020600020905b81548152906001019060200180831161155f57829003601f168201915b50505050509050600061159a60408051602081019091526000815290565b90508051600014156115ad575092915050565b8151156115df5780826040516020016115c7929190612d3b565b60405160208183030381529060405292505050919050565b6115e884611ff4565b949350505050565b6001600160a01b0381166000908152600f6020908152604091829020805483518184028101840190945280845260609392830182828015610b0b5760200282019190600052602060002090815481526020019060010190808311610af75750505050509050919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561087457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611694575050505050905090565b6060601380546107fb9061303d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546001600160a01b031633146117225760405162461bcd60e51b81526004016108e690612e91565b6001600160a01b03919091166000908152601160205260409020805460ff1916911515919091179055565b6007546001600160a01b031633146117775760405162461bcd60e51b81526004016108e690612e91565b6001600160a01b0381166117dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e6565b6117e581611b95565b50565b600c81815481106117f857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061186482610c0a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6118a682611812565b6119095760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016108e6565b60008281526006602090815260409091208251610a1c92840190612868565b600061193382611812565b6119945760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108e6565b600061199f83610c0a565b9050806001600160a01b0316846001600160a01b031614806119da5750836001600160a01b03166119cf8461087e565b6001600160a01b0316145b806115e857506115e881856116ca565b826001600160a01b03166119fd82610c0a565b6001600160a01b031614611a655760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016108e6565b6001600160a01b038216611ac75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108e6565b611ad28383836120cc565b611add60008261182f565b6001600160a01b0383166000908152600360205260408120805460019290611b06908490612fe3565b90915550506001600160a01b0382166000908152600360205260408120805460019290611b34908490612fb7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611bf0816121e6565b60008181526006602052604090208054611c099061303d565b1590506117e55760008181526006602052604081206117e5916128ec565b600c5460005b81811015610a1c57826001600160a01b0316600c8281548110611c6057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415611d8557611c86600183612fe3565b811415611cd357600c805480611cac57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b600c611ce0600184612fe3565b81548110611cfe57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600c80546001600160a01b039092169183908110611d3857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600c805480611cac57634e487b7160e01b600052603160045260246000fd5b80611d8f81613078565b915050611c2d565b6001600160a01b0382166000908152600e6020526040812054905b8181101561141c576001600160a01b0384166000908152600e60205260409020805484919083908110611df557634e487b7160e01b600052603260045260246000fd5b90600052602060002001541415611f3b57611e11600183612fe3565b811415611e68576001600160a01b0384166000908152600e60205260409020805480611e4d57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905561141c565b6001600160a01b0384166000908152600e60205260409020611e8b600184612fe3565b81548110611ea957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600e6000866001600160a01b03166001600160a01b031681526020019081526020016000208281548110611ef857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092556001600160a01b0386168152600e90915260409020805480611e4d57634e487b7160e01b600052603160045260246000fd5b80611f4581613078565b915050611db2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261141c90859061228d565b610a7682826040518060200160405280600081525061235f565b611fcc8484846119ea565b611fd884848484612392565b61141c5760405162461bcd60e51b81526004016108e690612e3f565b6060611fff82611812565b6120635760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108e6565b600061207a60408051602081019091526000815290565b9050600081511161209a57604051806020016040528060008152506120c5565b806120a48461249f565b6040516020016120b5929190612d3b565b6040516020818303038152906040525b9392505050565b6001600160a01b038316158015906120ec57506001600160a01b03821615155b15610a1c5760016120fc84610cdc565b6121069190612fe3565b6121135761211383611c27565b61211c82610cdc565b61216c57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0384161790555b6121768382611d97565b6001600160a01b038083166000908152600e60209081526040808320805460018101825581855292842090920185905592861682529082902091517fc5924cfdebd60744aa1d44883cfef5b2bab40fa00f59f61cb3464b281f90bd27926113189285928792899291600c90612f17565b60006121f182610c0a565b90506121ff816000846120cc565b61220a60008361182f565b6001600160a01b0381166000908152600360205260408120805460019290612233908490612fe3565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006122e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125b99092919063ffffffff16565b805190915015610a1c57808060200190518101906123009190612ba0565b610a1c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108e6565b61236983836125c8565b6123766000848484612392565b610a1c5760405162461bcd60e51b81526004016108e690612e3f565b60006001600160a01b0384163b1561249457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906123d6903390899088908890600401612d6a565b602060405180830381600087803b1580156123f057600080fd5b505af1925050508015612420575060408051601f3d908101601f1916820190925261241d91810190612bd8565b60015b61247a573d80801561244e576040519150601f19603f3d011682016040523d82523d6000602084013e612453565b606091505b5080516124725760405162461bcd60e51b81526004016108e690612e3f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115e8565b506001949350505050565b6060816124c35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156124ed57806124d781613078565b91506124e69050600a83612fcf565b91506124c7565b60008167ffffffffffffffff81111561251657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612540576020820181803683370190505b5090505b84156115e857612555600183612fe3565b9150612562600a86613093565b61256d906030612fb7565b60f81b81838151811061259057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506125b2600a86612fcf565b9450612544565b60606115e88484600085612707565b6001600160a01b03821661261e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108e6565b61262781611812565b156126745760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108e6565b612680600083836120cc565b6001600160a01b03821660009081526003602052604081208054600192906126a9908490612fb7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060824710156127685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108e6565b843b6127b65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108e6565b600080866001600160a01b031685876040516127d29190612d1f565b60006040518083038185875af1925050503d806000811461280f576040519150601f19603f3d011682016040523d82523d6000602084013e612814565b606091505b509150915061282482828661282f565b979650505050505050565b6060831561283e5750816120c5565b82511561284e5782518084602001fd5b8160405162461bcd60e51b81526004016108e69190612e2c565b8280546128749061303d565b90600052602060002090601f01602090048101928261289657600085556128dc565b82601f106128af57805160ff19168380011785556128dc565b828001600101855582156128dc579182015b828111156128dc5782518255916020019190600101906128c1565b506128e8929150612922565b5090565b5080546128f89061303d565b6000825580601f10612908575050565b601f0160209004906000526020600020908101906117e591905b5b808211156128e85760008155600101612923565b600067ffffffffffffffff80841115612952576129526130d3565b604051601f8501601f19908116603f0116810190828211818310171561297a5761297a6130d3565b8160405280935085815286868601111561299357600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146129c457600080fd5b919050565b600082601f8301126129d9578081fd5b6120c583833560208501612937565b803563ffffffff811681146129c457600080fd5b600060208284031215612a0d578081fd5b6120c5826129ad565b60008060408385031215612a28578081fd5b612a31836129ad565b9150612a3f602084016129ad565b90509250929050565b600080600060608486031215612a5c578081fd5b612a65846129ad565b9250612a73602085016129ad565b9150604084013590509250925092565b60008060008060808587031215612a98578081fd5b612aa1856129ad565b9350612aaf602086016129ad565b925060408501359150606085013567ffffffffffffffff811115612ad1578182fd5b8501601f81018713612ae1578182fd5b612af087823560208401612937565b91505092959194509250565b60008060408385031215612b0e578182fd5b612b17836129ad565b91506020830135612b27816130e9565b809150509250929050565b60008060408385031215612b44578182fd5b612b4d836129ad565b946020939093013593505050565b60008060408385031215612b6d578182fd5b612b76836129ad565b9150612a3f602084016129e8565b600060208284031215612b95578081fd5b81356120c5816130e9565b600060208284031215612bb1578081fd5b81516120c5816130e9565b600060208284031215612bcd578081fd5b81356120c5816130f7565b600060208284031215612be9578081fd5b81516120c5816130f7565b600060208284031215612c05578081fd5b813567ffffffffffffffff811115612c1b578182fd5b6115e8848285016129c9565b600060208284031215612c38578081fd5b5035919050565b600060208284031215612c50578081fd5b5051919050565b60008060408385031215612c69578182fd5b82359150602083013567ffffffffffffffff811115612c86578182fd5b612c92858286016129c9565b9150509250929050565b600060208284031215612cad578081fd5b6120c5826129e8565b6000815480845260208085019450838352808320835b83811015612ce857815487529582019560019182019101612ccc565b509495945050505050565b60008151808452612d0b816020860160208601612ffa565b601f01601f19169290920160200192915050565b60008251612d31818460208701612ffa565b9190910192915050565b60008351612d4d818460208801612ffa565b835190830190612d61818360208801612ffa565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d9d90830184612cf3565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612de85783516001600160a01b031683529284019291840191600101612dc3565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612de857835183529284019291840191600101612e10565b6020815260006120c56020830184612cf3565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b868152600060018060a01b038088166020840152808716604084015260c06060840152612f4760c0840187612cb6565b8381036080850152612f598187612cb6565b84810360a086015285548082528685526020808620935090910190845b81811015612fa657612f9783868654166001600160a01b0316815260200190565b60019485019490935001612f76565b50909b9a5050505050505050505050565b60008219821115612fca57612fca6130a7565b500190565b600082612fde57612fde6130bd565b500490565b600082821015612ff557612ff56130a7565b500390565b60005b83811015613015578181015183820152602001612ffd565b8381111561141c5750506000910152565b600081613035576130356130a7565b506000190190565b600181811c9082168061305157607f821691505b6020821081141561307257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561308c5761308c6130a7565b5060010190565b6000826130a2576130a26130bd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146117e557600080fd5b6001600160e01b0319811681146117e557600080fdfea2646970667358221220c7169000572d919a39477e0d3177269dbf4825b7e8fce1f90ca37c1427a461c864736f6c63430008040033";

export class Rat__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initContractURI: string,
    _erc20: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Rat> {
    return super.deploy(
      initContractURI,
      _erc20,
      baseId,
      _maxTokens,
      name,
      symbol,
      overrides || {}
    ) as Promise<Rat>;
  }
  getDeployTransaction(
    initContractURI: string,
    _erc20: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initContractURI,
      _erc20,
      baseId,
      _maxTokens,
      name,
      symbol,
      overrides || {}
    );
  }
  attach(address: string): Rat {
    return super.attach(address) as Rat;
  }
  connect(signer: Signer): Rat__factory {
    return super.connect(signer) as Rat__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatInterface {
    return new utils.Interface(_abi) as RatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rat {
    return new Contract(address, _abi, signerOrProvider) as Rat;
  }
}
